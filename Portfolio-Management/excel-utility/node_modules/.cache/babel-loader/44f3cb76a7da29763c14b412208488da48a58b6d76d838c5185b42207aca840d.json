{"ast":null,"code":"var _jsxFileName = \"/Users/rusher/Portfolio-Management/excel-utility/src/App.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Tabs, Tab, Box, Button } from \"@mui/material\";\nimport Transactions from \"./pages/Transactions\";\nimport Buy from \"./pages/Buy\";\nimport Sell from \"./pages/Sell\";\nimport Holdings from \"./pages/Holdings\";\nimport RealizedPnL from \"./pages/RealizedPnL\";\nimport AddTransactionModal from \"./components/AddTransactionModal\";\nimport { groupByISIN, calculateFIFORealizedPnL, calculateHoldings } from \"./utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [activeTab, setActiveTab] = useState(0);\n  // const [transactions, setTransactions] = useState([]);\n  // const [buy, setBuy] = useState([]);\n  // const [sell, setSell] = useState([]);\n  // const [holdings, setHoldings] = useState([]);\n  // const [realizedPnL, setRealizedPnL] = useState([]);\n\n  // const handleTabChange = (event, newValue) => setActiveTab(newValue);\n\n  // const handleAddTransaction = (newTransaction) => {\n  //   setTransactions([...transactions, newTransaction]);\n  // };\n\n  // useEffect(() => {\n  //   setBuy(groupByISIN(transactions, \"Buy\"));\n  //   setSell(groupByISIN(transactions, \"Sell\"));\n  //   setHoldings(calculateHoldings(transactions));\n  //   setRealizedPnL(calculateFIFORealizedPnL(transactions));\n  // }, [transactions]);\n\n  // return (\n  //   <Box sx={{ p: 3 }}>\n  //     <Button variant=\"contained\" color=\"primary\" onClick={() => setActiveTab(-1)}>\n  //       Add New Transaction\n  //     </Button>\n  //     <Tabs value={activeTab} onChange={handleTabChange} centered>\n  //       <Tab label=\"Transactions\" />\n  //       <Tab label=\"Buy\" />\n  //       <Tab label=\"Sell\" />\n  //       <Tab label=\"Holdings\" />\n  //       <Tab label=\"Realized P&L\" />\n  //     </Tabs>\n  //     {activeTab === 0 && <Transactions transactions={transactions} />}\n  //     {activeTab === 1 && <Buy buy={buy} />}\n  //     {activeTab === 2 && <Sell sell={sell} />}\n  //     {activeTab === 3 && <Holdings holdings={holdings} />}\n  //     {activeTab === 4 && <RealizedPnL realizedPnL={realizedPnL} />}\n  //     <AddTransactionModal\n  //       open={activeTab === -1}\n  //       onClose={() => setActiveTab(0)}\n  //       onAddTransaction={handleAddTransaction}\n  //     />\n  //   </Box>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Hello World\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 11\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Tabs","Tab","Box","Button","Transactions","Buy","Sell","Holdings","RealizedPnL","AddTransactionModal","groupByISIN","calculateFIFORealizedPnL","calculateHoldings","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rusher/Portfolio-Management/excel-utility/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Tabs, Tab, Box, Button } from \"@mui/material\";\nimport Transactions from \"./pages/Transactions\";\nimport Buy from \"./pages/Buy\";\nimport Sell from \"./pages/Sell\";\nimport Holdings from \"./pages/Holdings\";\nimport RealizedPnL from \"./pages/RealizedPnL\";\nimport AddTransactionModal from \"./components/AddTransactionModal\";\nimport { groupByISIN, calculateFIFORealizedPnL, calculateHoldings } from \"./utils/helpers\";\n\nfunction App() {\n  // const [activeTab, setActiveTab] = useState(0);\n  // const [transactions, setTransactions] = useState([]);\n  // const [buy, setBuy] = useState([]);\n  // const [sell, setSell] = useState([]);\n  // const [holdings, setHoldings] = useState([]);\n  // const [realizedPnL, setRealizedPnL] = useState([]);\n\n  // const handleTabChange = (event, newValue) => setActiveTab(newValue);\n\n  // const handleAddTransaction = (newTransaction) => {\n  //   setTransactions([...transactions, newTransaction]);\n  // };\n\n  // useEffect(() => {\n  //   setBuy(groupByISIN(transactions, \"Buy\"));\n  //   setSell(groupByISIN(transactions, \"Sell\"));\n  //   setHoldings(calculateHoldings(transactions));\n  //   setRealizedPnL(calculateFIFORealizedPnL(transactions));\n  // }, [transactions]);\n\n  // return (\n  //   <Box sx={{ p: 3 }}>\n  //     <Button variant=\"contained\" color=\"primary\" onClick={() => setActiveTab(-1)}>\n  //       Add New Transaction\n  //     </Button>\n  //     <Tabs value={activeTab} onChange={handleTabChange} centered>\n  //       <Tab label=\"Transactions\" />\n  //       <Tab label=\"Buy\" />\n  //       <Tab label=\"Sell\" />\n  //       <Tab label=\"Holdings\" />\n  //       <Tab label=\"Realized P&L\" />\n  //     </Tabs>\n  //     {activeTab === 0 && <Transactions transactions={transactions} />}\n  //     {activeTab === 1 && <Buy buy={buy} />}\n  //     {activeTab === 2 && <Sell sell={sell} />}\n  //     {activeTab === 3 && <Holdings holdings={holdings} />}\n  //     {activeTab === 4 && <RealizedPnL realizedPnL={realizedPnL} />}\n  //     <AddTransactionModal\n  //       open={activeTab === -1}\n  //       onClose={() => setActiveTab(0)}\n  //       onAddTransaction={handleAddTransaction}\n  //     />\n  //   </Box>\n  // );\n\n  return (<h1>Hello World</h1>)\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,QAAQ,eAAe;AACtD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,GAAG,MAAM,aAAa;AAC7B,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,mBAAmB,MAAM,kCAAkC;AAClE,SAASC,WAAW,EAAEC,wBAAwB,EAAEC,iBAAiB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3F,SAASC,GAAGA,CAAA,EAAG;EACb;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBAAQD,OAAA;IAAAE,QAAA,EAAI;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC9B;AAACC,EAAA,GA/CQN,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}