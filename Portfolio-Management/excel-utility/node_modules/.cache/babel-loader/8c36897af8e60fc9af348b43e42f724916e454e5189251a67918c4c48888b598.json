{"ast":null,"code":"var _jsxFileName = \"/Users/rusher/Portfolio-Management/excel-utility/src/pages/RealizedPnL.jsx\";\nimport React from \"react\";\nimport { Table, TableHead, TableRow, TableCell, TableBody } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RealizedPnL({\n  realizedPnL\n}) {\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"ISIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Stock Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Sell Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Sell Value\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Buy Cost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Profit / Loss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      children: realizedPnL.map((r, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: r.ISIN\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: r.stockName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: r.sellQuantity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: isNaN(r.sellValue) ? \"0.00\" : r.sellValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: isNaN(r.buyCost) ? \"0.00\" : r.buyCost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          style: {\n            color: r.profit >= 0 ? \"green\" : \"red\"\n          },\n          children: isNaN(r.profit) ? \"0.00\" : r.profit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: r.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = RealizedPnL;\nexport default RealizedPnL;\nvar _c;\n$RefreshReg$(_c, \"RealizedPnL\");","map":{"version":3,"names":["React","Table","TableHead","TableRow","TableCell","TableBody","jsxDEV","_jsxDEV","RealizedPnL","realizedPnL","children","fileName","_jsxFileName","lineNumber","columnNumber","map","r","index","ISIN","stockName","sellQuantity","isNaN","sellValue","buyCost","style","color","profit","date","_c","$RefreshReg$"],"sources":["/Users/rusher/Portfolio-Management/excel-utility/src/pages/RealizedPnL.jsx"],"sourcesContent":["import React from \"react\";\nimport { Table, TableHead, TableRow, TableCell, TableBody } from \"@mui/material\";\n\nfunction RealizedPnL({ realizedPnL }) {\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>ISIN</TableCell>\n          <TableCell>Stock Name</TableCell>\n          <TableCell>Sell Quantity</TableCell>\n          <TableCell>Sell Value</TableCell>\n          <TableCell>Buy Cost</TableCell>\n          <TableCell>Profit / Loss</TableCell>\n          <TableCell>Date</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {realizedPnL.map((r, index) => (\n          <TableRow key={index}>\n            <TableCell>{r.ISIN}</TableCell>\n            <TableCell>{r.stockName}</TableCell>\n            <TableCell>{r.sellQuantity}</TableCell>\n            <TableCell>\n              {isNaN(r.sellValue) ? \"0.00\" : r.sellValue}\n            </TableCell>\n            <TableCell>{isNaN(r.buyCost) ? \"0.00\" : r.buyCost}</TableCell>\n            <TableCell style={{ color: r.profit >= 0 ? \"green\" : \"red\" }}>\n              {isNaN(r.profit) ? \"0.00\" : r.profit}\n            </TableCell>\n            <TableCell>{r.date}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n\nexport default RealizedPnL;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}